helpers
helpTestExplicitReadBackFor: dbOutValue
	"Read back the row with the given value, using an explicit where clause."
	| queryStream result |
	queryStream := SQLStringSelectCommand sqlString: String new 
		parameters: #() 
		useBinding: self platform supportsBinding
		session: session.
	queryStream nextPutAll: 'SELECT test,id FROM ', self tableName, ' WHERE test '.
	queryStream nextPutAll: (dbOutValue isNil ifTrue: [' IS '] ifFalse: [' = ']).
	self platform supportsBinding 
		ifTrue: [ 
			type print: '?' on: queryStream.
			result := connection executeSQLString: queryStream contents 
				binding: (Array with: dbOutValue) ]
		ifFalse: [ 
			type print: dbOutValue on: queryStream.
			result := connection executeSQLString: queryStream contents ].
	result isEmpty ifTrue: [^nil].
	^(result atIndex: 1) atIndex: 1.
